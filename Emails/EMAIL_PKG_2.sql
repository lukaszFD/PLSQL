CREATE OR REPLACE PACKAGE BODY EMAIL_PKG AS

    PROCEDURE ADD_EMAIL(P_RECIPIENT VARCHAR2, P_SUBJECT VARCHAR2, P_TEMPLATE_ID NUMBER) IS
    BEGIN
        INSERT INTO EMAIL_QUEUE (RECIPIENT, SUBJECT, TEMPLATE_ID, STATUS)
        VALUES (P_RECIPIENT, P_SUBJECT, P_TEMPLATE_ID, 'PENDING');
        COMMIT;
    END ADD_EMAIL;

    PROCEDURE UPDATE_EMAIL_STATUS(P_EMAIL_ID NUMBER, P_STATUS VARCHAR2, P_ERROR_MSG VARCHAR2 DEFAULT NULL) IS
    BEGIN
        UPDATE EMAIL_QUEUE
        SET STATUS = P_STATUS, SENT_AT = CASE WHEN P_STATUS = 'SENT' THEN SYSTIMESTAMP ELSE NULL END, ERROR_MSG = P_ERROR_MSG
        WHERE ID = P_EMAIL_ID;
        COMMIT;
    END UPDATE_EMAIL_STATUS;

    PROCEDURE UPDATE_TEMPLATE(P_TEMPLATE_ID NUMBER, P_NEW_BODY CLOB, P_MODIFIED_BY VARCHAR2) IS
        V_OLD_BODY CLOB;
    BEGIN
        SELECT BODY INTO V_OLD_BODY FROM EMAIL_TEMPLATES WHERE ID = P_TEMPLATE_ID;

        INSERT INTO EMAIL_TEMPLATES_AUDIT (TEMPLATE_ID, OLD_BODY, NEW_BODY, MODIFIED_BY)
        VALUES (P_TEMPLATE_ID, V_OLD_BODY, P_NEW_BODY, P_MODIFIED_BY);

        UPDATE EMAIL_TEMPLATES
        SET BODY = P_NEW_BODY, UPDATED_AT = SYSTIMESTAMP
        WHERE ID = P_TEMPLATE_ID;
        COMMIT;
    END UPDATE_TEMPLATE;
	
    PROCEDURE ADD_EMAIL_TEMPLATE(P_TEMPLATE_NAME VARCHAR2, P_TEMPLATE_SUBJECT VARCHAR2, P_TEMPLATE_BODY CLOB) IS
    BEGIN
        INSERT INTO EMAIL_TEMPLATES (NAME, SUBJECT, BODY, CREATED_AT, UPDATED_AT)
        VALUES (P_TEMPLATE_NAME, P_TEMPLATE_SUBJECT, P_TEMPLATE_BODY, SYSTIMESTAMP, SYSTIMESTAMP);
        COMMIT;
    END ADD_EMAIL_TEMPLATE;
END EMAIL_PKG;
/
